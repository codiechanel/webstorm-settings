<templateSet group="user">
  <template name="lg" value="console.log(&quot;$class$&quot;, &quot;$method$&quot;, $varName$ )" description="my logger" toReformat="true" toShortenFQNames="true">
    <variable name="class" expression="jsClassName()" defaultValue="" alwaysStopAt="true" />
    <variable name="method" expression="jsMethodName()" defaultValue="" alwaysStopAt="true" />
    <variable name="varName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="setState" value="this.setState((previousState, currentProps) =&gt; {&#10;      return { ...previousState, foo: currentProps.bar };&#10;    });" description="my setState alternative" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="cons" value="constructor(props: any, context: any) {&#10;    super(props, context);&#10;&#10;  }" description="add typescript constructor" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_EXPRESSION" value="false" />
      <option name="JS_STATEMENT" value="false" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>